---
import type { CollectionEntry } from 'astro:content';
import { clsx } from 'clsx';
import type { ImageData } from '~/lib/cloudinary';
import { formatDate } from '~/lib/date';
import { CloudinaryImage } from './CloudinaryImage';
import { Tag } from './tag';

export interface Props {
  post: CollectionEntry<'blog'> & { heroImageInfo?: ImageData };
  isFeatured?: boolean;
  TitleElement?: 'h1' | 'h2' | 'h3' | 'h4';
  hideDate?: boolean;
  class?: string;
}

const { post, isFeatured, TitleElement = 'h2', hideDate } = Astro.props;

const hasImage = post.heroImageInfo;
---

<article
  lang={post.data.lang}
  class={clsx(
    'blog-article @container/article relative',
    isFeatured
      ? 'z-10 py-20 bg-white min-h-[20rem] flex items-center'
      : ['@md/bloglist:grid @md/bloglist:grid-cols-4 @md/bloglist:gap-6', 'pt-1 pb-3'],
    Astro.props.class
  )}
  data-shiny={!hasImage}
>
  {
    post.heroImageInfo && (
      <div
        class={clsx(
          'blog-hero-image-container absolute inset-y-0 h-full opacity-20 overflow-hidden transition-opacity',
          'cut-tr',
          isFeatured
            ? 'block -inset-x-4 sm:-inset-x-8 lg:inset-x-0 cut-10'
            : 'hidden inset-x-0 w-full cut-x-4 cut-y-8 @md/article:cut-x-8 @md/article:cut-y-4'
        )}
        aria-hidden
      >
        <div class="blog-hero-image-wrapper h-full">
          <CloudinaryImage
            data={post.heroImageInfo}
            className={clsx(
              'blog-hero-image w-full min-h-full object-cover',
              isFeatured ? 'lg:-translate-y-1/3' : '@md/bloglist:-translate-y-1/3',
              !isFeatured && 'delayed-appear'
            )}
            alt=""
            loading={isFeatured ? 'eager' : 'lazy'}
          />
        </div>
      </div>
    )
  }
  {
    hasImage && (
      <div
        class={clsx(
          'absolute inset-y-0 h-full bg-gradient-to-br from-white',
          isFeatured ? '-inset-x-4 sm:-inset-x-8 lg:inset-x-0' : 'inset-x-0 w-full'
        )}
      />
    )
  }
  {
    !isFeatured && !hideDate && (
      <time class="hidden relative @md/bloglist:block pl-3 text-sm leading-6 text-zinc-400">
        {formatDate(post.data.updatedDate || post.data.pubDate, post.data.lang)}
      </time>
    )
  }
  <div
    class={clsx(
      '@md/bloglist:col-span-3 h-full w-full relative',
      hasImage && (isFeatured ? 'pr-8' : 'pr-4 @md/article:pr-8')
    )}
  >
    <a href={`/blog/${post.id}/`} class="block group/bloglink blog-link">
      {
        !hasImage && (
          <div
            class={clsx(
              'blog-content-bg absolute -inset-y-3 -inset-x-4 z-0',
              '@md/bloglist:-inset-x-6',
              'scale-95 bg-zinc-50 opacity-0 transition',
              'group-hover/bloglink:scale-100 group-hover/bloglink:opacity-100',
              'cut-tr',
              isFeatured ? 'cut-10' : 'cut-x-4 cut-y-8 @md/article:cut-x-8 @md/article:cut-y-4'
            )}
          />
        )
      }
      <div
        class={clsx(
          'blog-content-preview relative transition-all',
          hasImage && (isFeatured ? 'drop-shadow-sm' : 'backdrop-blur-sm')
        )}
      >
        {
          !hideDate && (
            <time
              class={clsx(
                'text-sm block mb-2 pl-3 border-l-2 text-zinc-400 border-l-zinc-100',
                isFeatured ? '@md/bloglist:border-l-transparent' : '@md/bloglist:hidden'
              )}
            >
              {formatDate(post.data.updatedDate || post.data.pubDate, post.data.lang)}
            </time>
          )
        }
        <header>
          <TitleElement
            class={clsx(
              'blog-title font-techie font-semibold text-zinc-800 group-hover/bloglink:text-primary-500',
              isFeatured
                ? 'text-3xl @md/bloglist:text-4xl @md/bloglist:px-3'
                : 'text-lg @2xl/bloglist:text-2xl'
            )}
          >
            {post.data.title}
          </TitleElement>
        </header>
        {
          post.data.description && (
            <p
              class={clsx(
                'text-zinc-600 mt-2',
                isFeatured ? 'text-lg @md/bloglist:px-3 border-l-2 border-transparent' : 'text-sm'
              )}
            >
              {post.data.description}
            </p>
          )
        }
      </div>
    </a>
    {
      post.data.displayedTopics && post.data.displayedTopics.length > 0 && (
        <ul
          class={clsx(
            'relative mt-4 flex items-center flex-wrap gap-2',
            isFeatured && '@md/bloglist:px-3'
          )}
        >
          {post.data.displayedTopics.map((topic) => (
            <li>
              <Tag href={`/topic/${topic.value}/`}>{topic.label}</Tag>
            </li>
          ))}
        </ul>
      )
    }
  </div>
</article>
<script>
  import { setupShinyEffect } from '~/lib/shiny-effect';

  document.querySelectorAll('.blog-article[data-shiny]').forEach((shinyPreview) => {
    const link = shinyPreview.querySelector('.blog-link');
    const coverElement = shinyPreview.querySelector('.blog-content-bg');

    if (
      link &&
      link instanceof HTMLElement &&
      coverElement &&
      coverElement instanceof HTMLElement
    ) {
      setupShinyEffect(coverElement, link);
    }
  });

  document.querySelectorAll('.blog-link').forEach((blogLink) => {
    if (blogLink instanceof HTMLElement) {
      blogLink.addEventListener(
        'click',
        () => {
          try {
            (blogLink.style as any).viewTransitionName = 'hero-image';
          } catch (err) {
            console.error(err);
          }
        },
        { capture: true }
      );
    }
  });

  document.querySelectorAll('.topic-link').forEach((topicLink) => {
    if (topicLink instanceof HTMLElement) {
      topicLink.addEventListener(
        'click',
        () => {
          try {
            (topicLink.style as any).viewTransitionName = 'topic-title';
          } catch (err) {
            console.error(err);
          }
        },
        { capture: true }
      );
    }
  });
</script>

<style>
  @keyframes zoom {
    from {
      transform: scale(1.2);
    }

    to {
      transform: scale(1.8);
    }
  }

  @keyframes fade {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }

  .delayed-appear {
    opacity: 0;
    animation: fade 100ms ease-in 200ms forwards;
  }

  .blog-hero-image-wrapper {
    animation: zoom 5000ms linear alternate infinite;
    animation-play-state: paused;
  }

  .blog-article:hover .blog-hero-image-wrapper,
  .blog-article:focus-within .blog-hero-image-wrapper {
    animation-play-state: running;
  }

  .blog-article:hover .blog-hero-image-container,
  .blog-article:focus-within .blog-hero-image-container {
    display: block;
  }

  .blog-article:has(.blog-link:hover, .blog-link:focus) .blog-hero-image-container {
    opacity: 0.4;
  }
</style>
