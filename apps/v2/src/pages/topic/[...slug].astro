---
import type { GetStaticPaths } from 'astro';
import type { CollectionEntry } from 'astro:content';
import { clsx } from 'clsx';
import BaseHead from '~/components/BaseHead.astro';
import BlogPostPreview from '~/components/BlogPostPreview.astro';
import { BlogPostPreviewList, BlogPostPreviewListItems } from '~/components/BlogPostPreviewList';
import PageLayout from '~/components/PageLayout.astro';
import { TilList } from '~/components/til-list';
import { getBlogs } from '~/data/blog-helpers';
import { getTils } from '~/data/til-helpers';
import { TOPICS, TopicLabel } from '~/data/topic-types';

export const getStaticPaths: GetStaticPaths = async () => {
  return Promise.all(
    TOPICS.map(async (topic) => {
      const blogs = await getBlogs({
        topics: [topic],
      });
      const tils = await getTils({
        topics: [topic],
      });

      return {
        params: {
          slug: topic,
        },
        props: {
          blogs,
          tils,
          label: TopicLabel[topic],
        } satisfies Props,
      };
    })
  );
};

interface Props {
  blogs: Array<CollectionEntry<'blog'>>;
  tils: Array<CollectionEntry<'today-i-learnt'>>;
  label: string;
}

const { label, blogs, tils } = Astro.props;

const title = `Topic: ${label}`;

const hasTwoColumns = blogs.length > 0 && tils.length > 0;
---

<html lang="en">
  <head>
    <BaseHead title={title} />
  </head>
  <body>
    <PageLayout>
      <span slot="title"
        ><span class="block text-xl font-sans font-medium tracking-wide pl-1 text-zinc-400"
          >TOPIC:</span
        ><span class="block [view-transition-name:topic-title]">{label}</span></span
      >
      <div class={clsx('grid gap-12', hasTwoColumns && 'lg:grid-cols-2 lg:gap-4')}>
        {
          blogs.length > 0 && (
            <section>
              <h2 class="text-2xl mb-5 font-bold text-zinc-400">Blogs</h2>
              <BlogPostPreviewList>
                <BlogPostPreviewListItems>
                  {blogs.map((blog) => (
                    <BlogPostPreview post={blog} TitleElement="h3" />
                  ))}
                </BlogPostPreviewListItems>
              </BlogPostPreviewList>
            </section>
          )
        }
        {
          tils.length > 0 && (
            <section>
              <h2 class="text-2xl mb-5 font-bold text-zinc-400">Today I Learnt</h2>
              <TilList className="border-l-2 border-l-zinc-100">
                {tils.map((til) => (
                  <TilList.Item til={til} />
                ))}
              </TilList>
            </section>
          )
        }
      </div>
    </PageLayout>
  </body>
</html>
