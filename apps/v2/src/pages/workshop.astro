---
import { getCollection } from 'astro:content';
import BaseHead from '~/components/BaseHead.astro';
import PageLayout from '~/components/PageLayout.astro';
import { getWorkshops } from '~/data/workshop-helpers';

const description = `Free training materials that I've created`;

const workshops = getWorkshops(await getCollection('workshop'));

const { pathname } = Astro.url;

const permalink = new URL(pathname.replace(/\/$/, ''), Astro.site).toString();
---

<html lang="en">
  <head>
    <BaseHead title="Workshops - Malcolm Kee" description={description} permalink={permalink} />
  </head>
  <body>
    <PageLayout>
      <span slot="title">Programming workshops</span>
      <span slot="description">{description}</span>
      <ul class="grid grid-cols-1 gap-3 sm:grid-cols-2 lg:grid-cols-3">
        {
          workshops.map(({ entryUrl, workshop }, index) => (
            <li
              style={`--i: ${index}`}
              class="workshop-item relative px-5 py-3 border border-zinc-100 rounded-2xl transition-colors hover:bg-zinc-50"
            >
              <div class="hover-target absolute top-0 left-0 right-0 bottom-0 rounded-2xl" />
              <a href={entryUrl} class="workshop-link relative block group/link">
                <div class="flex items-center justify-center rounded-full bg-white ring-1 ring-zinc-100 h-12 w-12 group-hover/link:shadow-primary-100">
                  <img src={workshop.iconUrl} alt="" class="workshop-icon h-8 w-8" />
                </div>
                <h2 class="workshop-text mt-6 group-hover/link:text-primary-500">
                  {workshop.name}
                </h2>
                <p class="workshop-text mt-2 text-sm text-zinc-600">{workshop.description}</p>
                {workshop.underConstruction && (
                  <p class="workshop-text mt-2">
                    <span class="inline-block text-xs leading-5 px-2 bg-rose-800 text-white rounded shadow">
                      In Progress
                    </span>
                  </p>
                )}
              </a>
            </li>
          ))
        }
      </ul>
    </PageLayout>

    <script>
      import { setupShinyEffect } from '~/lib/shiny-effect';

      document.querySelectorAll('.workshop-item').forEach((item) => {
        if (item instanceof HTMLElement) {
          const hoverTarget = item.querySelector('.hover-target');

          if (hoverTarget && hoverTarget instanceof HTMLElement) {
            setupShinyEffect(hoverTarget, item);
          }
        }
      });

      const allWorkshopLinks = document.querySelectorAll('.workshop-link');

      allWorkshopLinks.forEach((workshopLink) => {
        if (workshopLink instanceof HTMLElement) {
          workshopLink.addEventListener(
            'click',
            () => {
              const workshopIcon = workshopLink.querySelector('.workshop-icon');
              if (workshopIcon && workshopIcon instanceof HTMLElement) {
                (workshopIcon.style as any).viewTransitionName = 'workshop-icon';
              }
            },
            { capture: true }
          );
        }
      });
    </script>
  </body>
</html>
