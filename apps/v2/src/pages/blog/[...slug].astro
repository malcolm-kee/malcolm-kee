---
import type { GetStaticPaths } from 'astro';
import { type CollectionEntry, render } from 'astro:content';

import BaseHead from '~/components/BaseHead.astro';
import { CloudinaryImage } from '~/components/CloudinaryImage';
import ContentSuggestions from '~/components/ContentSuggestions.astro';
import InstallPrompt from '~/components/InstallPrompt.astro';
import MdContent from '~/components/MdContent.astro';
import SignupForm from '~/components/SignupForm.astro';
import { getBlogs } from '~/data/blog-helpers';
import { getBlogRelatedContents } from '~/data/topic-helpers';
import { getTransformedImage } from '~/lib/cloudinary';

export const getStaticPaths: GetStaticPaths = async function getStaticPaths() {
  const blogs = await getBlogs({ includePreview: true });

  return blogs.map((blog) => ({
    params: {
      slug: blog.id,
    },
    props: {
      entry: blog,
    } satisfies Props,
  }));
};

interface Props {
  entry: CollectionEntry<'blog'>;
}

const { entry } = Astro.props;
const { Content, headings } = await render(entry);
const { title, description, pubDate, updatedDate, heroImagePublicId, alt, lang } = entry.data;

const relativePath = `blog/${entry.id}`;

const related = await getBlogRelatedContents(entry);

const imageData = heroImagePublicId ? await getTransformedImage(heroImagePublicId) : undefined;
---

<html lang="en">
  <head>
    <BaseHead
      title={title}
      description={description}
      publishedDate={pubDate}
      updatedDate={updatedDate}
      contentType="article"
      ogBgImage={imageData && imageData.baseSrc}
      articleType="blog"
      themeColor={imageData && imageData.primaryColor}
    />
    <style>
      .heroImgContainer {
        view-transition-name: hero-image;
      }

      .heroImg,
      .heroImgPlaceholder {
        max-height: 45vh;
      }
    </style>
  </head>

  <body>
    <MdContent
      title={title}
      publishDate={pubDate}
      updatedDate={updatedDate}
      headings={headings}
      saveKey={relativePath}
      description={description}
      lang={lang}
      backUrl="/blog/"
      backButtonLabel="Back to all blogs"
    >
      <div slot="layout-header">
        {
          imageData && (
            <div class="sm:px-8">
              <div class="heroImgContainer mt-[-72px] max-w-7xl mx-auto lg:px-8">
                <CloudinaryImage
                  data={imageData}
                  alt={alt || ''}
                  loading="eager"
                  className="heroImg max-w-full object-cover"
                />
              </div>
            </div>
          )
        }
      </div>
      <Content />
      <div slot="content-footer">
        <SignupForm class="mb-12 offline:hidden" />
        <InstallPrompt class="mb-12" />
        <div class="border-t border-gray-100 pt-8">
          <ContentSuggestions blogs={related.blogs} tils={related.tils} />
        </div>
      </div>
    </MdContent>
  </body>
</html>
