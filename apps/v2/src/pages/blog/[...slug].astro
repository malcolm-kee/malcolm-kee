---
import type { GetStaticPaths } from 'astro';
import { CollectionEntry } from 'astro:content';
import { clsx } from 'clsx';
import { BackButton } from '~/components/BackButton';
import BaseHead from '~/components/BaseHead.astro';
import { CloudinaryImage } from '~/components/CloudinaryImage';
import Container from '~/components/Container';
import ContentSuggestions from '~/components/ContentSuggestions.astro';
import Layout from '~/components/Layout.astro';
import MdContent from '~/components/MdContent.astro';
import SignupForm from '~/components/SignupForm.astro';
import { getBlogs } from '~/data/blog-helpers';
import { getBlogRelatedContents } from '~/data/topic-helpers';
import { getTransformedImage } from '~/lib/cloudinary';

export const getStaticPaths: GetStaticPaths = async function getStaticPaths() {
  const blogs = await getBlogs({ includePreview: true });

  return blogs.map((blog) => ({
    params: {
      slug: blog.slug,
    },
    props: {
      entry: blog,
    } satisfies Props,
  }));
};

interface Props {
  entry: CollectionEntry<'blog'>;
}

const { entry } = Astro.props;
const { Content } = await entry.render();
const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImagePublicId,
  alt,
  lang = 'en',
} = entry.data;

const permalink = new URL(`blog/${entry.slug}`, Astro.site).toString();

const related = await getBlogRelatedContents(entry);

const imageData = heroImagePublicId
  ? await getTransformedImage(heroImagePublicId)
  : undefined;
---

<html lang={lang}>
  <head>
    <BaseHead
      title={title}
      description={description}
      publishedDate={pubDate}
      updatedDate={updatedDate}
      contentType="article"
      permalink={permalink}
      ogBgImage={imageData && imageData.baseSrc}
      articleType="blog"
      themeColor={imageData && imageData.primaryColor}
    />
    <style>
      .heroImgContainer {
        view-transition-name: hero-image;
      }

      .heroImg,
      .heroImgPlaceholder {
        max-height: 45vh;
      }
    </style>
  </head>

  <body>
    <Layout>
      {
        imageData && (
          <div class="sm:px-8">
            <div class="heroImgContainer mt-[-72px] max-w-7xl mx-auto lg:px-8">
              <CloudinaryImage
                data={imageData}
                alt={alt || ''}
                loading="eager"
                className="heroImg max-w-full object-cover"
              />
            </div>
          </div>
        )
      }
      <Container>
        <div class={clsx('relative lg:-left-5', !imageData && 'mt-12')}>
          <BackButton
            className={clsx(
              'hidden sm:flex left-0 md:-left-12',
              imageData ? 'absolute -top-12 lg:top-1' : 'md:absolute -top-4'
            )}
            href="/blog"
            aria-label="Back to all blogs"
          />
        </div>
        <MdContent title={title} publishDate={pubDate}>
          <Content />
        </MdContent>
        <SignupForm class="mb-12" />
        <div class="border-t border-gray-100 pt-8">
          <ContentSuggestions blogs={related.blogs} tils={related.tils} />
        </div>
      </Container>
    </Layout>
  </body>
</html>
