---
import type { GetStaticPaths, GetStaticPathsItem } from 'astro';
import { CollectionEntry, getCollection } from 'astro:content';
import BaseHead from '~/components/BaseHead.astro';
import '~/components/shiki.css';
import WorkshopContent from '~/components/workshop/WorkshopContent.astro';
import WorkshopLayout from '~/components/workshop/WorkshopLayout.astro';
import {
  groupWorkshopLessons,
  WorkshopTocItem,
  type WorkshopMetadata,
  type WorkshopRenderData,
} from '~/data/workshop-helpers';

export const getStaticPaths: GetStaticPaths = async function getStaticPaths() {
  const workshopLessons = await getCollection('workshop');

  const workshopMap = groupWorkshopLessons(workshopLessons);

  const result: Array<GetStaticPathsItem> = [];

  workshopMap.forEach(({ lessons, tocItems }) => {
    lessons.forEach((lesson, index) => {
      result.push({
        params: {
          slug: lesson.slug,
        },
        props: {
          entry: lesson.data,
          workshop: lesson.workshop,
          prev: lessons[index - 1],
          next: lessons[index + 1],
          tocItems,
        } satisfies Props,
      });
    });
  });

  return result;
};

interface Props {
  entry: CollectionEntry<'workshop'>;
  workshop: WorkshopMetadata;
  tocItems: Array<WorkshopTocItem>;
  prev?: WorkshopRenderData | undefined;
  next?: WorkshopRenderData | undefined;
}

const { entry, workshop, prev, next, tocItems } = Astro.props;

const {
  data: { title, description },
} = entry;

const { Content, headings } = await entry.render();
---

<html lang="en">
  <head>
    <BaseHead
      title={title}
      description={description}
      ogHeading={workshop.name}
      ogBorderColor={workshop.themeColor}
      ogBgImage={workshop.iconUrl}
    />
  </head>
  <WorkshopLayout
    workshop={workshop}
    tocItems={tocItems}
    prev={prev}
    next={next}
    headings={headings}
  >
    <WorkshopContent title={title}>
      <Content />
    </WorkshopContent>
  </WorkshopLayout>
</html>
